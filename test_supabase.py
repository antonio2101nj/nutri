#!/usr/bin/env python3
"""
Script para testar a conex√£o com Supabase e verificar configura√ß√µes b√°sicas
"""

from supabase import create_client, Client

# Configura√ß√µes do Supabase
SUPABASE_URL = "https://eoljttyilmxahdanpjfm.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVvbGp0dHlpbG14YWhkYW5wamZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1Mjc5MjAsImV4cCI6MjA2OTEwMzkyMH0.EH35jBZ4ALwHPJUrhZOr58c4ijXQrw4YAxoLyBn7070"

def test_supabase_connection():
    """Testar conex√£o b√°sica com Supabase"""
    try:
        # Criar cliente com chave anon
        supabase: Client = create_client(SUPABASE_URL, SUPABASE_ANON_KEY)
        print("‚úÖ Cliente Supabase criado com sucesso")
        
        # Testar opera√ß√£o b√°sica
        try:
            # Tentar acessar uma tabela que pode n√£o existir ainda
            result = supabase.table('profiles').select('*').limit(1).execute()
            print("‚úÖ Tabela 'profiles' acess√≠vel")
            print(f"   Dados encontrados: {len(result.data)} registros")
        except Exception as e:
            print(f"‚ö†Ô∏è Tabela 'profiles' n√£o encontrada ou sem dados: {e}")
        
        try:
            # Tentar acessar tabela de conte√∫do
            result = supabase.table('content').select('*').limit(1).execute()
            print("‚úÖ Tabela 'content' acess√≠vel")
            print(f"   Dados encontrados: {len(result.data)} registros")
        except Exception as e:
            print(f"‚ö†Ô∏è Tabela 'content' n√£o encontrada ou sem dados: {e}")
        
        return supabase
        
    except Exception as e:
        print(f"‚ùå Erro ao conectar com Supabase: {e}")
        return None

def test_auth_operations(supabase: Client):
    """Testar opera√ß√µes de autentica√ß√£o"""
    try:
        # Verificar se h√° sess√£o ativa
        session = supabase.auth.get_session()
        print(f"‚úÖ Verifica√ß√£o de sess√£o: {session is not None}")
        
        # Testar se podemos acessar informa√ß√µes do usu√°rio atual
        user = supabase.auth.get_user()
        print(f"‚úÖ Verifica√ß√£o de usu√°rio: {user is not None}")
        
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è Opera√ß√µes de auth: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîç Testando conex√£o com Supabase...")
    print("=" * 50)
    
    # Testar conex√£o
    supabase = test_supabase_connection()
    if not supabase:
        print("‚ùå Falha na conex√£o com Supabase")
        return
    
    # Testar opera√ß√µes de auth
    print("\nüîê Testando opera√ß√µes de autentica√ß√£o...")
    test_auth_operations(supabase)
    
    print("\n" + "=" * 50)
    print("‚úÖ Teste de conex√£o conclu√≠do!")
    print("\nüìã Status:")
    print("- Conex√£o com Supabase: OK")
    print("- Cliente configurado: OK")
    print("- Pronto para autentica√ß√£o: OK")
    print("\nüéØ Pr√≥ximo passo:")
    print("- Testar a aplica√ß√£o React com autentica√ß√£o")

if __name__ == "__main__":
    main()

